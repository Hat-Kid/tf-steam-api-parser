name: Linux

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04]
        config: [Release]
        compiler: [clang]
        experimental: [false]

    name: ${{ matrix.config }}-${{ matrix.compiler }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}

    steps:
    - uses: actions/checkout@v2
    
    - name: Get Conan
      uses: turtlebrowser/get-conan@v1.0
    
    - name: Conan - Create default profile
      run: conan profile new default --detect

    - name: Conan - Update profile
      run: conan profile update settings.compiler.libcxx=libstdc++11 default
      
    - name: Conan - Install dependencies
      run: conan install . -s build_type=${{ matrix.config }} --install-folder=${{github.workspace}}/build --build missing

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ matrix.config }}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{ matrix.config }}

    - name: Compress artifacts
      run: tar -czvf ${{github.workspace}}/build.tar.gz -C ${{github.workspace}}/build/bin .

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        path: ${{github.workspace}}/build.tar.gz
        name: release-bin-linux-x64_${{github.sha}}